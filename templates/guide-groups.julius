$('.del-gg').click(function() {
    deleteGuideGroup($(this));
});

function deleteGuideGroup(btn) {
    var ggid = $(btn).parent().parent().data('ggid');
    $.ajax({
        type: "DELETE",
        contentType: "application/json",
        url: "/guidegroup/" + ggid
    })
    .done(function (data) {
        var delRow = $(".group-row[data-ggid='" + ggid + "']");
        var delPos = parseInt(delRow.first().text(), 10);

        $('.group-row th:first-child').each(function() {
            var pos = parseInt($(this).text(), 10);
            if (pos > delPos)
                $(this).text(pos - 1);
        });

        delRow.remove();
    })
    .fail(function (jqXHR, textStatus, errorThrown) {
        console.log(errorThrown + ": " + jqXHR.responseText);
        makeAlertDanger("Something went wrong");
    });
}

$('.up-gg').click(function() {
    moveGuideGroup(this, "up");
});

$('.down-gg').click(function() {
    moveGuideGroup(this, "down");
});

function moveGuideGroup(btn, dir) {
    var moveTag;
    var posModifier;
    var mvFunc;

    if (dir == "up")
    {
        moveTag = "\"GGUp\"";
        posModifier = -1;
        mvFunc = ggmoveUp;
    }
    else if (dir == "down")
    {
        moveTag = "\"GGDown\"";
        posModifier = 1;
        mvFunc = ggmoveDown;
    }
    else
    {
        console.log("Invalid direction supplied: " + dir);
        return;
    }

    var ggid = $(btn).parent().parent().data('ggid');

    $.ajax({
        type: "PATCH",
        contentType: "application/json",
        url: "/guidegroup/" + ggid,
        data: moveTag
    })
    .done(function (data) {
        var mvRow = $(".group-row[data-ggid='" + ggid + "']");
        var mvPos = parseInt(mvRow.first().text(), 10);
        var newPos = mvPos + posModifier;
        var changed = false;

        $('.group-row th:first-child').each(function() {
            var pos = parseInt($(this).text(), 10);
            if (pos == newPos)
            {
                $(this).text(pos + (posModifier * -1));
                changed = true;
            }
        });

        if (changed)
        {
            mvRow.find('th').first().text(newPos);
            mvFunc(mvRow);
        }        
    })
    .fail(function (jqXHR, textStatus, errorThrown) {
        console.log(errorThrown + ": " + jqXHR.responseText);
        makeAlertDanger("Something went wrong");
    });
}

function ggmoveUp(gg) {
    var el = $(gg)
    if (el.not(':first-child'))
        el.prev().before(el);
}

function ggmoveDown(gg) {
    var el = $(gg)
    if (el.not(':last-child'))
        el.next().after(el);
}